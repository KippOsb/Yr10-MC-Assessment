v\#importing various libraries and related packages required for our prject
import pandas as pd 
import numpy as np 
import sklearn
import matplotlib.pyplot as pyplot
import pickle 
from sklearn import linear_model
from sklearn.utils import shuffle
from matplotlib import style
#import our data into the data variable
data = pd.read_csv("forestfires.csv", sep=",") #our data is seperated by semicolons

print(data.head()) #print the first five lines of code
#define data as an array, with the specific varaibles
data = data[["area", "DMC", "DC"]] 
print(data.head())
predict = "DC" #defining predict variable
x = np.array(data.drop(predict, axis=1)) #set the x axis
y = np.array(data[predict]) #set the y axis
#splits the data to test and train it
x_train, x_test, y_train, y_test = sklearn.model_selection.train_test_split(x,y,test_size=0.1)
linear = linear_model.LinearRegression()
linear.fit(x_train, y_train)
acc = linear.score(x_test, y_test)

print(acc)
# Save the trained model (named 'linear') to a file called "studentmodel.pickle"
with open("studentmodel.pickle", "wb") as f:
    pickle.dump(linear, f)  # Serialize the model and save it to the file

# Open the saved model file in read-binary mode
pickle_in = open("studentmodel.pickle", "rb")

# Load the model from the file
linear = pickle.load(pickle_in)  # Deserialize the model back into the 'linear' object

# Print the coefficients of the linear regression model
print('Coefficient: \n', linear.coef_)

# Print the intercept of the linear regression model
print('Intercept: \n',  linear.intercept_)
predictions = linear.predict(x_test)
for x in range(len(predictions)):
    print(predictions[x], x_test[x], y_test[x])
# Use the 'ggplot' style for the plots
style.use("ggplot")

# Set the variable 'p' to the name of the feature/column 'DMC'
p = "DMC"

# Create a scatter plot with 'DMC' on the x-axis and 'area' on the y-axis
pyplot.scatter(data[p], data["area"])

# Label the x-axis as 'DMC'
pyplot.xlabel(p)

# Label the y-axis as 'AREA'
pyplot.ylabel("AREA")

# Display the plot
pyplot.show()
